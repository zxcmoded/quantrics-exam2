{"ast":null,"code":"import invoiceApi from '../../api/invoiceApi';\nimport loading from 'vue-loading-overlay';\nimport invoiceHub from '../../hub/invoiceHub';\nexport default {\n  components: {\n    loading\n  },\n  data: function () {\n    return {\n      // Note 'isActive' is left out and will not appear in the rendered table\n      fields: [{\n        key: 'id',\n        label: 'Id',\n        sortable: true\n      }, {\n        key: 'issuingDate',\n        label: 'Date',\n        sortable: true\n      }, {\n        key: 'validFrom',\n        label: 'Month',\n        sortable: true\n      }, {\n        key: 'year',\n        label: 'Year',\n        sortable: true\n      }, {\n        key: 'totalAmount',\n        label: 'Total',\n        sortable: true\n      }],\n      invoices: [],\n      isLoading: false\n    };\n  },\n  name: 'invoice-list',\n  methods: {\n    async loadInvoice() {\n      let vm = this;\n      vm.isLoading = true;\n      const {\n        data\n      } = await invoiceApi.fetchInvoice();\n      vm.invoices = data;\n      vm.isLoading = false;\n    },\n\n    async generateInvoice() {\n      this.isLoading = true;\n\n      try {\n        await invoiceApi.generateInvoice();\n        this.$toastr.success('Generating Invoice is in progress', 'Information');\n      } catch (error) {\n        console.log(error);\n        this.$toastr.error('Error generating invoice', 'Error');\n      }\n\n      this.isLoading = false;\n    }\n\n  },\n\n  async mounted() {\n    invoiceHub.client.on('RefreshInvoiceList', () => {\n      console.log('test');\n    });\n  }\n\n};","map":{"version":3,"mappings":"AA6BA;AACA;AACA;AACA;EACAA;IACAC;EADA,CADA;EAIAC;IACA;MACA;MACAC,SACA;QACAC,SADA;QAEAC,WAFA;QAGAC;MAHA,CADA,EAMA;QACAF,kBADA;QAEAC,aAFA;QAGAC;MAHA,CANA,EAWA;QACAF,gBADA;QAEAC,cAFA;QAGAC;MAHA,CAXA,EAgBA;QACAF,WADA;QAEAC,aAFA;QAGAC;MAHA,CAhBA,EAqBA;QACAF,kBADA;QAEAC,cAFA;QAGAC;MAHA,CArBA,CAFA;MA6BAC,YA7BA;MA+BAC;IA/BA;EAiCA,CAtCA;EAuCAC,oBAvCA;EAwCAC;IACA;MACA;MACAC;MACA;QAAAT;MAAA;MACAS;MACAA;IACA,CAPA;;IAQA;MACA;;MACA;QACA;QACA;MACA,CAHA,CAGA;QACAC;QACA;MACA;;MACA;IACA;;EAlBA,CAxCA;;EA4DA;IACAC;MACAD;IACA,CAFA;EAGA;;AAhEA","names":["components","loading","data","fields","key","label","sortable","invoices","isLoading","name","methods","vm","console","invoiceHub"],"sourceRoot":"src/views/invoice","sources":["Invoice.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <loading :active.sync=\"isLoading\" :can-cancel=\"true\" :is-full-page=\"true\"></loading>Â´\n\n        <b-card class=\"card\">\n            <b-row>\n                <b-col>\n                    <h1>Invoice Management</h1>\n                    <hr />\n                    <b-button @click.self=\"generateInvoice()\">Generate Invoice</b-button>\n                    <hr />\n                    <b-table :bordered=\"true\" striped hover :items=\"invoices\" :fields=\"fields\" label-sort-asc=\"\"\n                        label-sort-desc=\"\" label-sort-clear=\"\">\n\n                        <template #cell(issuingDate)=\"row\">\n                            {{ row.item.issuingDate | dateFormat }}\n                        </template>\n\n                        <template #cell(totalAmount)=\"row\">\n                            ${{ row.item.totalAmount | decimalFormat }}\n                        </template>\n                    </b-table>\n                </b-col>\n            </b-row>\n        </b-card>\n    </div>\n</template>\n<script>\n\nimport invoiceApi from '../../api/invoiceApi';\nimport loading from 'vue-loading-overlay';\nimport invoiceHub from '../../hub/invoiceHub';\nexport default {\n    components: {\n        loading\n    },\n    data: function () {\n        return {\n            // Note 'isActive' is left out and will not appear in the rendered table\n            fields: [\n                {\n                    key: 'id',\n                    label: 'Id',\n                    sortable: true\n                },\n                {\n                    key: 'issuingDate',\n                    label: 'Date',\n                    sortable: true\n                },\n                {\n                    key: 'validFrom',\n                    label: 'Month',\n                    sortable: true,\n                },\n                {\n                    key: 'year',\n                    label: 'Year',\n                    sortable: true,\n                },\n                {\n                    key: 'totalAmount',\n                    label: 'Total',\n                    sortable: true,\n                }\n            ],\n            invoices: [],\n\n            isLoading: false\n        }\n    },\n    name: 'invoice-list',\n    methods: {\n        async loadInvoice() {\n            let vm = this;\n            vm.isLoading = true;\n            const { data } = await invoiceApi.fetchInvoice();\n            vm.invoices = data;\n            vm.isLoading = false;\n        },\n        async generateInvoice() {\n            this.isLoading = true;\n            try {\n                await invoiceApi.generateInvoice();\n                this.$toastr.success('Generating Invoice is in progress', 'Information');\n            } catch (error) {\n                console.log(error)\n                this.$toastr.error('Error generating invoice', 'Error');\n            }\n            this.isLoading = false;\n        }\n    },\n    async mounted() {\n        invoiceHub.client.on('RefreshInvoiceList', () => {\n            console.log('test');\n        });\n    }\n}\n\n</script>\n<style>\n.card {\n    padding: 15px\n}\n</style>"]},"metadata":{},"sourceType":"module"}