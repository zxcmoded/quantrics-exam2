{"ast":null,"code":"// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n// 0, 2, 10, 30 second delays before reconnect attempts.\nvar DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\n/** @private */\n\nvar DefaultReconnectPolicy =\n/** @class */\nfunction () {\n  function DefaultReconnectPolicy(retryDelays) {\n    this.retryDelays = retryDelays !== undefined ? retryDelays.concat([null]) : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\n  }\n\n  DefaultReconnectPolicy.prototype.nextRetryDelayInMilliseconds = function (retryContext) {\n    return this.retryDelays[retryContext.previousRetryCount];\n  };\n\n  return DefaultReconnectPolicy;\n}();\n\nexport { DefaultReconnectPolicy };","map":{"version":3,"mappings":"AAAA;AACA;AAIA;AACA,IAAMA,oCAAoC,GAAG,CAAC,CAAD,EAAI,IAAJ,EAAU,KAAV,EAAiB,KAAjB,EAAwB,IAAxB,CAA7C;AAEA;;AACA;AAAA;AAAA;EAGI,gCAAYC,WAAZ,EAAkC;IAC9B,KAAKA,WAAL,GAAmBA,WAAW,KAAKC,SAAhB,GAAgCD,WAAW,OAAX,CAAW,CAAE,IAAF,CAAX,CAAhC,GAAqDD,oCAAxE;EACH;;EAEMG,gEAAP,UAAoCC,YAApC,EAA8D;IAC1D,OAAO,KAAKH,WAAL,CAAiBG,YAAY,CAACC,kBAA9B,CAAP;EACH,CAFM;;EAGX;AAAC,CAVD","names":["DEFAULT_RETRY_DELAYS_IN_MILLISECONDS","retryDelays","undefined","DefaultReconnectPolicy","retryContext","previousRetryCount"],"sourceRoot":"","sources":["../../src/DefaultReconnectPolicy.ts"],"sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { IRetryPolicy, RetryContext } from \"./IRetryPolicy\";\r\n\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n\r\n/** @private */\r\nexport class DefaultReconnectPolicy implements IRetryPolicy {\r\n    private readonly retryDelays: Array<number | null>;\r\n\r\n    constructor(retryDelays?: number[]) {\r\n        this.retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n\r\n    public nextRetryDelayInMilliseconds(retryContext: RetryContext): number | null {\r\n        return this.retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}