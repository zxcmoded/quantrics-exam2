{"ast":null,"code":"import assetApi from '../../api/assetApi';\nimport Loading from 'vue-loading-overlay';\nexport default {\n  components: {\n    Loading\n  },\n  name: 'add-asset-dialog',\n\n  data() {\n    return {\n      form: {\n        Name: '',\n        Price: 0,\n        ValidFrom: null,\n        ValidTo: null\n      },\n      isLoading: true,\n      fullPage: true\n    };\n  },\n\n  methods: {\n    async handleOk(bvModalEvent) {\n      try {\n        bvModalEvent.preventDefault();\n        let param = {\n          Name: this.Name,\n          Price: this.Price,\n          ValidFrom: this.ValidFrom,\n          ValidTo: this.ValidTo\n        };\n        const {\n          data\n        } = await assetApi.addAsset(param);\n        this.$emit('loadList', data);\n      } catch (error) {\n        this.$bvToast.toast(`Test`, {\n          title: 'BootstrapVue Toast',\n          autoHideDelay: 100,\n          appendToast: false\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2CA;AACA;AAGA;EACAA;IACAC;EADA,CADA;EAIAC,wBAJA;;EAKAC;IACA;MACAC;QACAC,QADA;QAEAC,QAFA;QAGAC,eAHA;QAIAC;MAJA,CADA;MAOAC,eAPA;MAQAC;IARA;EAUA,CAhBA;;EAiBAC;IACA;MACA;QACAC;QAEA;UACAP,eADA;UAEAC,iBAFA;UAGAC,yBAHA;UAIAC;QAJA;QAOA;UAAAL;QAAA;QACA;MACA,CAZA,CAYA;QACA;UACAU,2BADA;UAEAC,kBAFA;UAGAC;QAHA;MAKA;IACA;;EArBA;AAjBA","names":["components","Loading","name","data","form","Name","Price","ValidFrom","ValidTo","isLoading","fullPage","methods","bvModalEvent","title","autoHideDelay","appendToast"],"sourceRoot":"src/views/asset","sources":["AddAssetDialog.vue"],"sourcesContent":["<template>\n    <div>\n        <loading :active.sync=\"isLoading\" :can-cancel=\"true\"  :is-full-page=\"fullPage\"></loading>Â´\n\n        <b-modal id=\"modal-add-asset\" ref=\"modal\" title=\"Add Asset\" @ok=\"handleOk\">\n            <form>\n                <b-row>\n                    <b-col col-auto md=\"3\" class=\"my-auto\">\n                        <label>Name</label>\n                    </b-col>\n                    <b-col>\n                        <input type=\"text\" class=\"form-control\" v-model=\"form.Name\" name=\"name\" />\n                    </b-col>\n                </b-row>\n                <b-row class=\"mt-2\">\n                    <b-col col-auto md=\"3\" class=\"my-auto\">\n                        <label>Price</label>\n                    </b-col>\n                    <b-col>\n                        <input type=\"number\" v-model=\"form.Price\" class=\"form-control\" name=\"Price\" />\n                    </b-col>\n                </b-row>\n                <b-row class=\"mt-2\">\n                    <b-col col-auto md=\"3\" class=\"my-auto\">\n                        <label>Valid From</label>\n                    </b-col>\n                    <b-col>\n                        <input type=\"date\" v-model=\"form.ValidFrom\" class=\"form-control\" name=\"ValidFrom\" />\n                    </b-col>\n                </b-row>\n                <b-row class=\"mt-2\">\n                    <b-col col-auto md=\"3\" class=\"my-auto\">\n                        <label>Valid To</label>\n                    </b-col>\n                    <b-col>\n                        <input type=\"date\" v-model=\"form.ValidTo\" class=\"form-control\" name=\"ValidTo\" />\n                    </b-col>\n                </b-row>\n            </form>\n        </b-modal>\n    </div>\n</template>\n<script>\nimport assetApi from '../../api/assetApi';    \nimport Loading from 'vue-loading-overlay';\n\n\nexport default {\n    components: {\n        Loading\n    },\n    name: 'add-asset-dialog',\n    data() {\n        return {\n            form: {\n                Name: '',\n                Price: 0,\n                ValidFrom: null,\n                ValidTo: null\n            },\n            isLoading: true,\n            fullPage: true\n        }\n    },\n    methods: {\n        async handleOk(bvModalEvent) {\n            try {\n                bvModalEvent.preventDefault();\n\n                let param = {\n                    Name: this.Name,\n                    Price: this.Price,\n                    ValidFrom: this.ValidFrom,\n                    ValidTo: this.ValidTo\n                };\n\n                const { data } = await assetApi.addAsset(param);\n                this.$emit('loadList', data);\n            } catch (error) {\n                this.$bvToast.toast(`Test`, {\n                    title: 'BootstrapVue Toast',\n                    autoHideDelay: 100,\n                    appendToast: false\n                })\n            }\n        }\n    },\n}\n</script>"]},"metadata":{},"sourceType":"module"}